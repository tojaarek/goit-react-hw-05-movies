{"version":3,"file":"static/js/85.9c354873.chunk.js","mappings":"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","sources":["components/Input/Input.styled.js","components/Input/Input.jsx","components/SearhResults/SearchResults.styled.js","components/SearhResults/SearchResults.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Field = styled.input`\n  padding: 4px 4px;\n  width: 250px;\n  border-radius: 4px;\n  border: 2px solid #ba704f;\n  outline: none;\n  margin-right: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 4px;\n  border-radius: 4px;\n  border: 2px solid #ba704f;\n  background-color: #ffffff;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #ba704f;\n  }\n`;\n","import { Field, Button } from './Input.styled';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ inputValue, onSubmit }) => {\n  return (\n    <form>\n      <Field\n        type=\"text\"\n        name=\"query\"\n        value={inputValue}\n        onSubmit={event => onSubmit(event.target.value)}\n        placeholder=\"Search movies\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nInput.propTypes = {\n  inputValue: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 35px;\n  list-style: none;\n  margin: 45px 0 0 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px 5px;\n  font-size: 14px;\n  width: 160px;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const PlaceholderImage = styled.img`\n  width: 100px;\n  border-radius: 4px;\n  margin-bottom: 5px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n\nexport const Year = styled.p`\n  font-weight: 400;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 4px 4px;\n  border-radius: 4px;\n  border: 2px solid #ba704f;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 14px;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: #ba704f;\n  }\n`;\n\nexport const Error = styled.p`\n  font-weight: 500;\n  text-align: start;\n  position: absolute;\n  top: 120px;\n  left: 25px;\n`;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport {\n  Image,\n  Item,\n  List,\n  Name,\n  Year,\n  Link,\n  Error,\n} from './SearchResults.styled';\nimport { PlaceholderImage } from './SearchResults.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchResults = ({ movieName }) => {\n  const [searchedMovie, setSearchedMovie] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const apiKey = '40f1e2fc01a3359e74179736ebf3e1b9';\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${movieName}`\n        );\n        setSearchedMovie(response.data.results);\n      } catch (error) {\n        alert(\n          'Something went wrong while getting the movies. Please reload the page.'\n        );\n      }\n    };\n    if (movieName) {\n      getMovies();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieName]);\n\n  return (\n    <List>\n      {movieName && searchedMovie.length > 0 ? (\n        searchedMovie.map(movie => (\n          <Item key={movie.id}>\n            {movie.poster_path ? (\n              <Image\n                src={`https://www.themoviedb.org/t/p/w300${movie.poster_path}`}\n                alt={`${movie.original_title} poster`}\n              />\n            ) : (\n              <PlaceholderImage src=\"https://via.placeholder.com/100x150\" />\n            )}\n            <Name>{movie.original_title}</Name>\n            <Year>({movie.release_date.substring(0, 4)})</Year>\n            <Link to={`/movies/${movie.id}`} state={{ from: '/movies' }}>\n              Details\n            </Link>\n          </Item>\n        ))\n      ) : (\n        <Error>{movieName ? `No results found for \"${movieName}\"` : ''}</Error>\n      )}\n    </List>\n  );\n};\n\nSearchResults.propTypes = {\n  movieName: PropTypes.string.isRequired,\n};\n\nexport default SearchResults;\n","import { Main } from 'components/App.styled';\nimport Input from 'components/Input/Input';\nimport SearchResults from 'components/SearhResults/SearchResults';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Main>\n      <Input value={movieName} onSubmit={updateQuery} />\n      <SearchResults movieName={movieName} />\n    </Main>\n  );\n};\n\nexport default Movies;\n"],"names":["Field","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_ref","inputValue","onSubmit","_jsxs","children","_jsx","type","name","value","event","target","placeholder","List","Item","Image","_templateObject3","PlaceholderImage","_templateObject4","Name","_templateObject5","Year","_templateObject6","Link","NavLink","_templateObject7","Error","_templateObject8","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","movieName","_useState","useState","_useState2","_slicedToArray","searchedMovie","setSearchedMovie","useEffect","getMovies","_ref2","_asyncToGenerator","_callee","response","_context","axios","concat","data","results","t0","alert","apply","arguments","map","movie","poster_path","src","alt","original_title","release_date","substring","to","id","from","_Error","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","Main","Input","query","SearchResults"],"sourceRoot":""}